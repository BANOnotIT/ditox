// @flow strict

import type {Module, ModuleDeclaration} from 'ditox';
import type {Node} from 'react';
import React from 'react';

/**
 * @category Component
 *
 * Binds the module to a new dependency container.
 *
 * If a parent container is exist, it is connected to the current one by default.
 *
 * @param params.module - Module declaration for binding
 * @param params.scope - Optional scope for binding: `singleton` (default) or `scoped`.
 *
 * @example
 *
 * ```tsx
 * const LOGGER_MODULE: ModuleDeclaration<LoggerModule> = {
 *
 * function App() {
 *   return (
 *     <DependencyModule module={LOGGER_MODULE}>
 *       <NestedComponent />
 *     </DependencyModule>
 *   );
 * }
 * ```
 */
declare export function DependencyModule(params: {
  children: Node,
  module: ModuleDeclaration<Module<*>>,
  scope?: 'scoped' | 'singleton',
}): Node;
